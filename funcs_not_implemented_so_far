-- #krui_err        deleteUnitList(int no_of_units, int unit_list[]);


-- #krui_err        createFTypeEntry(char *Ftype_symbol, char *act_func_name,
#    char *out_func_name, int no_of_sites,
#    char **array_of_site_names);


#int             getFirstPredUnit(FlintType *strength);
#int             getFirstPredUnitAndData(FlintType *strength,float *val_a,float *val_b, float *val_c);
#int             getNextPredUnit(FlintType *strength);
#int             getNextPredUnitAndData(FlintType *strength,float *val_a,float *val_b, float *val_c);
#int             getCurrentPredUnit(FlintType *strength);
#
#int             getFirstSuccUnit(int source_unit_no, FlintType *weight);
#int             getNextSuccUnit(FlintType *weight);


#bool            areConnectedWeight(int source_unit_no,int target_unit_no,
#    FlintType *weight);


#struct Link*    createLinkWithAdditionalParameters(
#    int source_unit_no, FlintTypeParam weight,
#    float val_a,float val_b,float val_c);


#krui_err        setRemapFunc(char *name, float *params);


-- #krui_err        trainNetwork(NetLearnParameters *parameters);
-- #krui_err        getNetworkErrorArray(double **learnErrors,int **atEpoch,
#    int *noOfErrors);

#krui_err        setClassDistribution(unsigned int *classDist);


#krui_err        GetPatInfo(pattern_set_info *set_info,
#    pattern_descriptor *pat_info);


#krui_err        AlignSubPat(int *inpos, int *outpos, int *no);
#krui_err        GetShapeOfSubPattern(int *insize, int *outsize,
#    int *inpos, int *outpos, int n_pos);


-- #krui_err        saveResultParam(char *filename, bool create,
#    int startpattern, int endpattern,
#    bool includeinput, bool includeoutput,
#    float *Update_param_array,
#    int NoOfUpdateParam);


#krui_err        xyTransTable(int op, int *x, int *y, int z);
#krui_err        getUnitCenters(int unit_no, int center_no,
#    struct PositionVector **unit_center);
#krui_err        setUnitCenters(int unit_no, int center_no,
#    struct PositionVector *unit_center);
#//char           *error(int error_code);


#
##ifdef MASPAR_KERNEL
#
#krui_err        MasPar( mode );
#krui_err        getMasParStatus(void);
#krui_err        MasParBenchmark( func_type, cycles, result );
#
##endif


#void            inv_forwardPass(struct UnitList *inputs);
#double          inv_backwardPass(float learn, float delta_max,
#    int *err_units, float ratio,
#    struct UnitList *inputs,
#    struct UnitList *outputs);


#krui_err        setErrorHandler(void(* error_Handler )(int));

